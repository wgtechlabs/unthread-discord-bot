# =============================================================================
# UNTHREAD DISCORD BOT - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# =============================================================================

# ======= Bot Configuration =======
# Discord Bot Token
# How to get: Discord Developer Portal → Applications → Your App → Bot → Token
DISCORD_BOT_TOKEN=your_discord_bot_token_here

# Discord Application ID (Client ID)
# How to get: Discord Developer Portal → Applications → Your App → General Information → Application ID
# Example: 1234567890123456789
CLIENT_ID=your_client_id_here

# Discord Guild ID (Server ID) - Optional for development/testing
# How to get: Enable Developer Mode in Discord → Right-click your server → Copy ID
# Leave empty for global commands, specify for guild-only commands during development
# Example: GUILD_ID=1234567890123456789
GUILD_ID=your_guild_id_here

# Unthread API Key
# How to get: Login to Unthread dashboard → Settings → API Keys → Generate new key
UNTHREAD_API_KEY=your_unthread_api_key_here

# Unthread Slack Channel ID
# How to get: Unthread dashboard → Settings → Integrations → Slack → Channel ID
# Example: C1234567890
UNTHREAD_SLACK_CHANNEL_ID=your_unthread_slack_channel_id_here

# Unthread Webhook Secret
# How to get: Unthread dashboard → Settings → Webhooks → Create webhook → Copy secret
UNTHREAD_WEBHOOK_SECRET=your_unthread_webhook_secret_here

# Slack Workspace ID (Team ID) - Required for file attachment downloads
# How to get: Slack workspace URL or from Slack API, format: T + 10 characters
# Example: SLACK_TEAM_ID=T08DF0UA02H (identifies which Slack workspace contains the files)
SLACK_TEAM_ID=your_slack_workspace_id_here

# ======= Webhook Server Configuration =======
# Webhook Secret for Unthread Webhook Server (CRITICAL for Docker integration)
# This secret is used by the unthread-webhook-server container to verify webhook signatures
# IMPORTANT: This MUST match the UNTHREAD_WEBHOOK_SECRET in your webhook server's environment
# How to get: Unthread dashboard → Settings → Webhooks → Create webhook → Copy secret
UNTHREAD_WEBHOOK_SECRET=your_unthread_webhook_secret_here

# ======= Infrastructure =======
# Database Credentials (CHANGE THESE IN PRODUCTION!)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=unthread_discord_bot

# Docker (default): redis://redis-platform:6379, redis://redis-webhook:6379
# Local development: redis://localhost:6379, redis://localhost:6380
# IMPORTANT: Both Redis URLs are REQUIRED for proper bot operation
# - PLATFORM_REDIS_URL: Bot state management and caching
# - WEBHOOK_REDIS_URL: Agent response delivery (CRITICAL for two-way communication)
PLATFORM_REDIS_URL=redis://redis-platform:6379
WEBHOOK_REDIS_URL=redis://redis-webhook:6379

# Docker (default): postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-platform:5432/${POSTGRES_DB}
# Local development: postgresql://postgres:postgres@localhost:5432/${POSTGRES_DB}
# Note: ?sslmode=disable is automatically added when DATABASE_SSL_VALIDATE=full
POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-platform:5432/${POSTGRES_DB}

# ======= Application Settings =======
# Node environment mode
# Set to "production" in production environments, "development" for local/dev
NODE_ENV=development

# Webhook poll interval (milliseconds)
# How often the bot checks for agent replies from Unthread (lower = more responsive, higher = less load)
WEBHOOK_POLL_INTERVAL=1000

# Company name (optional, but recommended)
# Used for creating customer ID based on server/channel information
# If not set or contains placeholder values, the bot will use fallback behavior
# Example: MY_COMPANY_NAME=Acme Corporation
MY_COMPANY_NAME=your_company_name_here

# Default priority for new tickets created through the bot
# Allowed values: 3 (low), 5 (medium), 7 (high), 9 (critical)
# Leave empty or remove to create tickets without priority setting
UNTHREAD_DEFAULT_PRIORITY=5

# Email Domain Configuration (optional)
# Domain used for generating dummy email addresses when users haven't set their own
# Default: discord.user (maintains backward compatibility)
# Examples: test.discord.user, dev.example.com, staging.mycompany.com
# Leave empty or remove to use default domain
DUMMY_EMAIL_DOMAIN=discord.user

# SSL Configuration
# - true: Disables SSL certificate validation (rejectUnauthorized=false, but SSL still encrypted)
# - full: Disables SSL completely (automatically adds ?sslmode=disable to connection)
# - false/undefined: Enables SSL with certificate validation (production default)
DATABASE_SSL_VALIDATE=true

# ======= Discord-Specific Configuration =======
# IMPORTANT: Discord Bot uses Discord's built-in permission system
# Unlike Telegram bots, this bot does NOT use an ADMIN_USERS environment variable
# Bot permissions are managed through Discord's server role/permission system:
# - Server administrators can invite the bot and grant permissions
# - Channel permissions control where the bot can create threads and send messages
# - Thread permissions control bot access to support ticket threads
# For setup instructions, see: https://github.com/wgtechlabs/unthread-discord-bot#installation

# Forum Channel IDs (optional)
# Comma-separated list of Discord forum channel IDs for ticket integration
# How to get: Enable Developer Mode → Right-click forum channel → Copy ID
# Example: FORUM_CHANNEL_IDS=1234567890123456789,9876543210987654321
FORUM_CHANNEL_IDS=channel_id_1,channel_id_2,channel_id_3

# Debug Mode (optional)
# Enable verbose logging for development and troubleshooting
DEBUG_MODE=false

# Application Port (optional)
# Port for webhook server and health checks
PORT=3000

# HTTP Timeout Configuration (optional)
# Timeout for Unthread API requests in milliseconds
UNTHREAD_HTTP_TIMEOUT_MS=15000