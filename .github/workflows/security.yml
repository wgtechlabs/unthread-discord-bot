---
name: Security

on:
  push:
    branches: [dev]
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'package.json'
      - 'yarn.lock'
      - '.github/workflows/security.yml'
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  schedule:
    - cron: '0 2 * * 1'  # Weekly security audit on Mondays at 2 AM UTC
  workflow_dispatch:

env:
  REGISTRY_DOCKERHUB: wgtechlabs/unthread-discord-bot
  REGISTRY_GHCR: ghcr.io/wgtechlabs/unthread-discord-bot
  NODE_VERSION: '22'

jobs:
  docker-scout-analysis:
    name: Docker Scout Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    permissions:
      contents: read
      security-events: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        run: |
          echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build development image for analysis
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: |
            ${{ env.REGISTRY_DOCKERHUB }}:dev-${{ steps.meta.outputs.short_sha }}
            ${{ env.REGISTRY_GHCR }}:dev-${{ steps.meta.outputs.short_sha }}
          labels: |
            org.opencontainers.image.title=Unthread Discord Bot
            org.opencontainers.image.description=Turn Discord servers into comprehensive support ticket hubs with real-time bidirectional communication — powered by Unthread.io.
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.build_date }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker Scout analysis
        uses: docker/scout-action@v1
        with:
          command: quickview,cves,recommendations
          image: ${{ env.REGISTRY_DOCKERHUB }}:dev-${{ steps.meta.outputs.short_sha }}
          sarif-file: 'scout-results.sarif'
          summary: true

      - name: Upload Docker Scout results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('scout-results.sarif') != ''
        with:
          sarif_file: 'scout-results.sarif'
          category: 'docker-scout-dev'

  pre-release-security:
    name: Pre-Release Security Gate
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    permissions:
      contents: read
      security-events: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        run: |
          echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build image for pre-release security scan
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: |
            ${{ env.REGISTRY_DOCKERHUB }}:pr-${{ github.event.number }}-${{ steps.meta.outputs.short_sha }}
          labels: |
            org.opencontainers.image.title=Unthread Discord Bot
            org.opencontainers.image.description=Turn Discord servers into comprehensive support ticket hubs with real-time bidirectional communication — powered by Unthread.io.
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.build_date }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          cache-from: type=gha

      - name: Run Trivy container security scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REGISTRY_DOCKERHUB }}:pr-${{ github.event.number }}-${{ steps.meta.outputs.short_sha }}
          format: 'sarif'
          output: 'trivy-prerelease.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'  # Fail workflow on critical/high vulnerabilities

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('trivy-prerelease.sarif') != ''
        with:
          sarif_file: 'trivy-prerelease.sarif'
          category: 'pre-release-scan'

      - name: Docker Scout comparison with production
        uses: docker/scout-action@v1
        if: always()
        with:
          command: compare
          image: ${{ env.REGISTRY_DOCKERHUB }}:pr-${{ github.event.number }}-${{ steps.meta.outputs.short_sha }}
          to: ${{ env.REGISTRY_DOCKERHUB }}:latest
          ignore-unchanged: true
          only-severities: critical,high
          github-token: ${{ secrets.GITHUB_TOKEN }}

  scheduled-security:
    name: Scheduled Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Comprehensive Docker Scout analysis of production
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations,policy
          image: ${{ env.REGISTRY_DOCKERHUB }}:latest
          sarif-file: 'scout-scheduled.sarif'
          summary: true

      - name: Upload scheduled Scout results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('scout-scheduled.sarif') != ''
        with:
          sarif_file: 'scout-scheduled.sarif'
          category: 'scheduled-security-audit'

      - name: Comprehensive Trivy scan of production
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REGISTRY_DOCKERHUB }}:latest
          format: 'sarif'
          output: 'trivy-scheduled.sarif'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

      - name: Upload scheduled Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('trivy-scheduled.sarif') != ''
        with:
          sarif_file: 'trivy-scheduled.sarif'
          category: 'scheduled-vulnerability-audit'

      - name: Security audit summary
        run: |
          echo "## 🔒 Weekly Security Audit Complete" >> $GITHUB_STEP_SUMMARY
          echo "**Audit Date:** \`$(date -u +'%Y-%m-%d %H:%M:%S UTC')\`" >> $GITHUB_STEP_SUMMARY
          echo "**Production Image:** \`${{ env.REGISTRY_DOCKERHUB }}:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Security Tools Used:**" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 Docker Scout (CVEs, Recommendations, Policy)" >> $GITHUB_STEP_SUMMARY
          echo "- 🛡️ Trivy (Comprehensive Vulnerability Scan)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Results Location:**" >> $GITHUB_STEP_SUMMARY
          echo "- Security tab → Code scanning alerts" >> $GITHUB_STEP_SUMMARY
          echo "- Categories: scheduled-security-audit, scheduled-vulnerability-audit" >> $GITHUB_STEP_SUMMARY